-- create_blocks.sql.j2
-- params: source_table, target_schema, id_col, name_col, domain_col, city_col, country_col,
--         use_domain, use_name3_country, use_compact5_city, max_block_size

CREATE SCHEMA IF NOT EXISTS {{ target_schema }};

CREATE OR REPLACE TABLE {{ target_schema }}.blocks AS
WITH base AS (
  SELECT
    {{ id_col }}::BIGINT AS company_id,
    NULLIF(LOWER(TRIM({{ domain_col }})), '')  AS domain_name,
    REGEXP_REPLACE(REGEXP_REPLACE(LOWER({{ name_col }}), '[^a-z0-9\s]', '', 'g'), '\s', '', 'g') AS name_compact,
    NULLIF(LOWER(TRIM({{ city_col }})), '')    AS city,
    NULLIF(LOWER(TRIM({{ country_col }})), '') AS country
  FROM {{ source_table }}
),
raw AS (
  {% set sep = "" %}
  {% if use_domain -%}
  SELECT company_id, 'domain' AS kind, domain_name AS bkey FROM base WHERE domain_name IS NOT NULL
  {% set sep = "UNION ALL" %}
  {%- endif %}
  {% if use_name3_country -%}
  {{ sep }} SELECT company_id, 'name3_country' AS kind, CONCAT(SUBSTR(name_compact,1,3),'|',country) AS bkey
  FROM base WHERE name_compact IS NOT NULL AND country IS NOT NULL AND LENGTH(name_compact) >= 3
  {% set sep = "UNION ALL" %}
  {%- endif %}
  {% if use_compact5_city -%}
  {{ sep }} SELECT company_id, 'compact5_city' AS kind, CONCAT(SUBSTR(name_compact,1,5),'|',city) AS bkey
  FROM base WHERE name_compact IS NOT NULL AND city IS NOT NULL AND LENGTH(name_compact) >= 5
  {%- endif %}
),
dedup AS (
  SELECT DISTINCT kind, bkey, company_id FROM raw
),
kept AS (
  SELECT d.*
  FROM dedup d
  JOIN (
    SELECT kind, bkey, COUNT(*) AS n
    FROM dedup GROUP BY kind, bkey
    HAVING COUNT(*) BETWEEN 2 AND {{ max_block_size }}
  ) k USING (kind, bkey)
)
SELECT
  kind, bkey, company_id,
  hash(kind || '|' || bkey) AS bkey_hash   -- for sharding
FROM kept;